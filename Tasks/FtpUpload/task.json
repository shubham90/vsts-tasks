{
  "id": "6f8c69a5-b023-428e-a125-fccf4efcb929",
  "name": "FtpUpload",
  "friendlyName": "FTP Upload",
  "description": "FTP Upload",
  "author": "Microsoft Corporation",
  "helpMarkDown": "Upload files to a remote machine using the File Transfer Protocol (FTP), or securely with FTPS.  [More Information](http://go.microsoft.com/fwlink/?LinkId=809084).",
  "category": "Utility",
  "visibility": [
    "Build",
    "Release"
  ],
  "demands": [],
  "version": {
    "Major": "1",
    "Minor": "0",
    "Patch": "1"
  },
  "instanceNameFormat": "FTP Upload: $(rootFolder)",
  "groups": [
        {
          "name": "advanced",
          "displayName": "Advanced",
          "isExpanded": true
        }
    ],
  "inputs": [
    {
      "name": "serverEndpoint",
      "type": "connectedService:Generic",
      "label": "FTP Service Endpoint",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "Select the service endpoint for your FTP server.  To create one, click the Manage link and create a new Generic Service Endpoint, enter the FTP server URL for the server URL, e.g. <b>`ftp://server.example.com`</b>, and required credentials.<p>Secure connections will always be made regardless of the specified protocol (<b>`ftp://`</b> or <b>`ftps://`</b>) if the target server supports FTPS.  To allow only secure connections, use the <b>`ftps://`</b> protocol, e.g. <b>`ftps://server.example.com`</b>.  Connections to servers not supporting FTPS will fail if <b>`ftps://`</b> is specified."
    },
    {
      "name": "rootFolder",
      "type": "filePath",
      "label": "Source folder",
      "defaultValue": "",
      "required": true,
      "helpMarkDown": "The source folder to upload files from."
    },
    {
      "name": "filePatterns",
      "type": "multiLine",
      "label": "File patterns",
      "defaultValue": "**",
      "required": true,
      "helpMarkDown": "File paths or patterns of the files to upload.  Supports multiple lines of minimatch patterns.  [More Information](https://go.microsoft.com/fwlink/?LinkId=800269)",
      "properties": {
          "resizable": "true",
          "rows" : "4"
      }
    },
    {
      "name": "remotePath",
      "type": "string",
      "label": "Remote directory",
      "defaultValue": "/upload/$(Build.BuildId)/",
      "required": true,
      "helpMarkDown": "Upload files to this directory on the remote FTP server."
    },
    {
        "name": "clean",
        "type": "boolean",
        "label": "Clean remote directory",
        "defaultValue": "false",
        "required": true,
        "helpMarkDown": "Recursively delete all contents of the remote directory before uploading.",
        "groupName": "advanced"
    },
    {
        "name": "overwrite",
        "type": "boolean",
        "label": "Overwrite",
        "defaultValue": "true",
        "required": true,
        "helpMarkDown": "Overwrite existing files in the remote directory.",
        "groupName": "advanced"
    },
    {
        "name": "preservePaths",
        "type": "boolean",
        "label": "Preserve file paths",
        "defaultValue": "false",
        "required": true,
        "helpMarkDown": "If selected, the relative local directory structure is recreated under the remote directory where files are uploaded.  Otherwise, files are uploaded directly to the remote directory without creating additional subdirectories.<p>For example, suppose your source folder is: <b>`/home/user/source/`</b> and contains the file: <b>`foo/bar/foobar.txt`</b>, and your remote directory is: <b>`/uploads/`</b>.<br>If selected, the file is uploaded to: <b>`/uploads/foo/bar/foobar.txt`</b>.  Otherwise, to: <b>`/uploads/foobar.txt`</b>.",
        "groupName": "advanced"
    },
    {
        "name": "rejectUnauthorized",
        "type": "boolean",
        "label": "Reject unauthorized SSL certificates",
        "defaultValue": "true",
        "required": true,
        "helpMarkDown": "If selected, when connecting in secure mode with ftps://, the ftp server certificate is verified with several well known root certificate authorities (e.g. VeriSign).  This option protects against invalid server authentication certificates which may be expired or revoked (e.g. if they were compromized).  Disabling this option should be done with care, but is necessary if using self-signed certificates.",
        "groupName": "advanced"
    }
  ],  "execution": {
    "Node": {
      "target": "ftpuploadtask.js",
      "argumentFormat": ""
    }
  }
}